<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reminder.geulbeotmall.member.model.dao.MemberMapper">
	
	<resultMap id="signInMemberResultMap" type="com.reminder.geulbeotmall.member.model.dto.MemberDTO">
		<id property="memberId" column="MEMBER_ID"/>
		<result property="memberPwd" column="MEMBER_PWD"/>
		<result property="name" column="NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="address" column="ADDRESS"/>
		<result property="agreement" column="AGREEMENT"/>
		<result property="accInactiveYn" column="ACC_INACTIVE_YN"/>
		<result property="tempPwdYn" column="TEMP_PWD_YN"/>
		<result property="accumLoginCount" column="ACCUM_LOGIN_COUNT"/>
		<result property="loginFailedCount" column="LOGIN_FAILED_COUNT"/>
		<result property="latestLoginDate" column="LATEST_LOGIN_DATE"/>
		<result property="accCreationDate" column="ACC_CREATION_DATE"/>
		<result property="accChangedDate" column="ACC_CHANGED_DATE"/>
		<result property="accClosingDate" column="ACC_CLOSING_DATE"/>
		<result property="accClosingYn" column="ACC_CLOSING_YN"/>
		<collection property="roleList" resultMap="roleResultMap"/> <!-- 1:N -->
	</resultMap>
	
	<resultMap id="roleResultMap" type="com.reminder.geulbeotmall.member.model.dto.RoleDTO">
		<id property="memberId" column="REF_MEMBER_ID"/>
		<id property="authorityCode" column="REF_AUTHORITY_CODE"/>
		<association property="authority" resultMap="authorityResultMap"/> <!-- 1:1 -->
	</resultMap>
	
	<resultMap id="authorityResultMap" type="com.reminder.geulbeotmall.member.model.dto.AuthorityDTO">
		<id property="authCode" column="AUTHORITY_CODE"/>
		<result property="authName" column="AUTHORITY_NAME"/>
		<result property="authDesc" column="AUTHORITY_DESC"/>
	</resultMap>
	
	<resultMap id="wishListResultMap" type="com.reminder.geulbeotmall.member.model.dto.WishListDTO">
		<result property="memberId" column="MEMBER_ID"/>
		<result property="optionNo" column="OPTION_NO"/>
		<association property="product" resultMap="productResultMap"/> <!-- 1:1 -->
		<association property="category" resultMap="categoryResultMap"/> <!-- 1:1 -->
		<association property="brand" resultMap="brandResultMap"/> <!-- 1:1 -->
		<association property="option" resultMap="optionResultMap"/> <!-- 1:1 -->
		<association property="attachmentList" resultMap="thumbnailResultMap"/> <!-- 1:1 -->
	</resultMap>
	
	<!-- 상품 조회용 -->
	<resultMap id="productResultMap" type="com.reminder.geulbeotmall.product.model.dto.ProductDTO">
		<id property="prodNo" column="PROD_NO"/>
		<result property="categoryNo" column="CATEGORY_NO"/>
		<result property="brandNo" column="BRAND_NO"/>
		<result property="prodName" column="PROD_NAME"/>
		<result property="prodDesc" column="PROD_DESC"/>
		<result property="productTag" column="PRODUCT_TAG"/>
		<result property="discountRate" column="DISCOUNT_RATE"/>
		<result property="prodPrice" column="PROD_PRICE"/>
		<result property="prodOrigin" column="PROD_ORIGIN"/>
		<result property="prodDetailContent" column="PROD_DETAIL_CONTENT"/>
		<result property="prodDetailViewCount" column="PROD_DETAIL_VIEW_COUNT"/>
		<result property="prodEnrollDate" column="PROD_ENROLL_DATE"/>
		<result property="prodChangeDate" column="PROD_CHANGE_DATE"/>
		<result property="prodAvailYn" column="PROD_AVAIL_YN"/>
		<association property="category" resultMap="categoryResultMap"/> <!-- 1:1 -->
		<association property="brand" resultMap="brandResultMap"/> <!-- 1:1 -->
		<association property="attachmentList" resultMap="thumbnailResultMap"/> <!-- 1:1 -->
		<collection property="option" resultMap="optionResultMap"/> <!-- 1:N -->
	</resultMap>
	
	<!-- 썸네일 조회용 -->
	<resultMap id="thumbnailResultMap" type="com.reminder.geulbeotmall.upload.model.dto.AttachmentDTO">
		<id property="attachmentNo" column="ATTACHMENT_NO"/>
		<result property="refProdNo" column="REF_PROD_NO"/>
		<result property="refReviewNo" column="REF_REVW_NO"/>
		<result property="origFileName" column="ORIG_FILE_NAME"/>
		<result property="saveFileName" column="SAVE_FILE_NAME"/>
		<result property="savePath" column="SAVE_PATH"/>
		<result property="thumbnailPath" column="THUMBNAIL_PATH"/>
		<result property="fileType" column="FILE_TYPE"/>
		<result property="attachStatusYn" column="ATTACH_STATUS_YN"/>
	</resultMap>
	
	<!-- 옵션 조회용 -->
	<resultMap id="optionResultMap" type="com.reminder.geulbeotmall.product.model.dto.OptionDTO">
		<id property="optionNo" column="OPTION_NO"/>
		<result property="refProdNo" column="REF_PROD_NO"/>
		<result property="refStockNo" column="REF_STOCK_NO"/>
		<result property="bodyColor" column="OPT_BODY_COLOR"/>
		<result property="inkColor" column="OPT_INK_COLOR"/>
		<result property="pointSize" column="OPT_POINT_SIZE"/>
		<result property="extraCharge" column="OPT_EXTRA_CHARGE"/>
		<association property="stock" resultMap="stockResultMap"/> <!-- 1:1 -->
	</resultMap>
	
	<!-- 재고 조회용 -->
	<resultMap id="stockResultMap" type="com.reminder.geulbeotmall.product.model.dto.StockDTO">
		<id property="stockNo" column="STOCK_NO"/>
		<result property="stockAmount" column="STOCK_AMOUNT"/>
		<result property="stockDate" column="STOCK_DATE"/>
	</resultMap>
	
	<!-- 카테고리 조회용 -->
	<resultMap id="categoryResultMap" type="com.reminder.geulbeotmall.product.model.dto.CategoryDTO">
		<id property="categoryNo" column="CATEGORY_NO"/>
		<result property="categoryName" column="CATEGORY_NAME"/>
	</resultMap>
	
	<!-- 브랜드 조회용 -->
	<resultMap id="brandResultMap" type="com.reminder.geulbeotmall.product.model.dto.BrandDTO">
		<id property="brandNo" column="BRAND_NO"/>
		<result property="brandName" column="BRAND_NAME"/>
	</resultMap>
	
	<select id="findMemberById" resultMap="signInMemberResultMap">
		SELECT
			   A.MEMBER_ID
			 , A.MEMBER_PWD
			 , A.NAME
			 , A.PHONE
			 , A.EMAIL
			 , A.ADDRESS
			 , A.AGREEMENT
			 , A.ACC_INACTIVE_YN
			 , A.TEMP_PWD_YN
			 , A.ACCUM_LOGIN_COUNT
			 , A.LOGIN_FAILED_COUNT
			 , A.LATEST_LOGIN_DATE
			 , A.ACC_CREATION_DATE
			 , A.ACC_CHANGED_DATE
			 , A.ACC_CLOSING_DATE
			 , A.ACC_CLOSING_YN
			 , B.MEMBER_ID REF_MEMBER_ID <!-- 하단의 다섯 목록은 DB에 저장된 정보 토대로 ROLE_ADMIN/ROLE_MEMBER 구분 위해 JOIN 후 SELECT 필요 -->
			 , B.AUTHORITY_CODE REF_AUTH_CODE
			 , C.AUTHORITY_CODE REF_AUTH_CODE2
			 , C.AUTHORITY_NAME
			 , C.AUTHORITY_DESC
		  FROM TBL_MEMBER A
		  LEFT JOIN TBL_ROLE B ON(A.MEMBER_ID = B.MEMBER_ID)
		  LEFT JOIN TBL_AUTHORITY C ON(B.AUTHORITY_CODE = C.AUTHORITY_CODE)
		 WHERE A.MEMBER_ID = #{ username }
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMember">
		INSERT
		  INTO TBL_MEMBER
		(
		  MEMBER_ID
		, MEMBER_PWD
		, NAME
		, PHONE
		, EMAIL
		, ADDRESS
		, AGREEMENT
		, ACC_INACTIVE_YN
		, TEMP_PWD_YN
		, ACCUM_LOGIN_COUNT
		, LOGIN_FAILED_COUNT
		, LATEST_LOGIN_DATE
		, ACC_CREATION_DATE
		, ACC_CHANGED_DATE
		, ACC_CLOSING_DATE
		, ACC_CLOSING_YN
		)
		VALUES
		(
		  #{ memberId }
		, #{ memberPwd }
		, #{ name }
		, #{ phone }
		, #{ email }
		, #{ address }
		, DECODE(#{ agreement }, 'Y', 'Y', 'N')
		, DEFAULT
		, DEFAULT
		, DEFAULT
		, DEFAULT
		, NULL
		, SYSDATE
		, SYSDATE
		, NULL
		, DEFAULT
		)
	</insert>
	
	<insert id="insertRole">
		INSERT
		  INTO TBL_ROLE
		(
		  MEMBER_ID
		, AUTHORITY_CODE
		)
		VALUES
		(
		  #{ memberId }
		, #{ authorityCode }
		)
	</insert>
	
	<!-- 회원가입 중 아이디 중복 검사 -->
	<select id="checkId" parameterType="String" resultType="int">
		SELECT
			   COUNT(*)
		  FROM TBL_MEMBER
		 WHERE MEMBER_ID = #{ memberId }
	</select>
	
	<!-- 회원가입 중 이메일 중복 검사 -->
	<select id="checkEmail" parameterType="String" resultType="int">
		SELECT
			   COUNT(*)
		  FROM TBL_MEMBER
		 WHERE EMAIL = #{ email }
	</select>
	
	<!-- 회원가입 완료 시 이메일 인증 후 계정 활성화 -->
	<update id="updateAccActivation">
		UPDATE
			   TBL_MEMBER
		   SET ACC_INACTIVE_YN = 'N'
		 WHERE MEMBER_ID = #{ memberId }
	</update>
	
	<!-- 로그인 성공 횟수 누적 -->
	<update id="updateAccumLoginCount">
		UPDATE
			   TBL_MEMBER
		   SET ACCUM_LOGIN_COUNT = ACCUM_LOGIN_COUNT+1
		     , LATEST_LOGIN_DATE = SYSDATE
		     , LOGIN_FAILED_COUNT = 0
		 WHERE MEMBER_ID = #{ username }
	</update>
	
	<!-- 로그인 성공 시 최근 로그인 일시 업데이트 -->
	<update id="updateLatestLoginDate">
		UPDATE
			   TBL_MEMBER
		   SET LATEST_LOGIN_DATE = SYSDATE
		 WHERE MEMBER_ID = #{ username }
	</update>
	
	<!-- 현재까지 기록된 로그인 실패 횟수 리셋 -->
	<update id="resetLoginFailedCount">
		UPDATE
			   TBL_MEMBER
		   SET LOGIN_FAILED_COUNT = 0
		 WHERE MEMBER_ID = #{ username }
	</update>
	
	<!-- 로그인 실패 횟수 증가 -->
	<update id="updateLoginFailedCount">
		UPDATE
			   TBL_MEMBER
		   SET LOGIN_FAILED_COUNT = LOGIN_FAILED_COUNT+1
		 WHERE MEMBER_ID = #{ username }
	</update>
	
	<!-- 로그인 실패 횟수 조회 -->
	<select id="checkLoginFailedCount" parameterType="String" resultType="int">
		SELECT
			   COUNT(*)
		  FROM TBL_MEMBER
		 WHERE MEMBER_ID = #{ username }
	</select>
	
	<!-- 로그인 실패 횟수 5회 초과 시 계정 비활성화 -->
	<update id="deactivateUsername">
		UPDATE
			   TBL_MEMBER
		   SET ACC_INACTIVE_YN = 'Y'
		 WHERE MEMBER_ID = #{ username }
	</update>
	
	<!-- 현재 위시리스트 조회 -->
	<select id="getMemberWishList" resultMap="wishListResultMap">
		SELECT
			   A.MEMBER_ID
			 , A.OPTION_NO
			 , B.PROD_NO
			 , B.PROD_NAME
			 , B.DISCOUNT_RATE
			 , B.PROD_PRICE
			 , C.BRAND_NAME
			 , T.THUMBNAIL_PATH
			 , O.OPT_BODY_COLOR
			 , O.OPT_INK_COLOR
			 , O.OPT_POINT_SIZE
			 , O.OPT_EXTRA_CHARGE 
		  FROM TBL_WISHLIST A
		  LEFT JOIN TBL_OPTION O ON(A.OPTION_NO = O.OPTION_NO)
		  LEFT JOIN TBL_PRODUCT B ON(O.REF_PROD_NO = B.PROD_NO)
		  LEFT JOIN TBL_BRAND C ON(C.BRAND_NO = B.BRAND_NO)
		  LEFT JOIN TBL_ATTACHMENT T ON(B.PROD_NO = T.REF_PROD_NO)
		 WHERE A.MEMBER_ID = #{ memberId }
	</select>
	
	<!-- 위시리스트 찜하기 추가 -->
	<insert id="addToWishList">
		INSERT
		  INTO TBL_WISHLIST
		(
		  MEMBER_ID
		, OPTION_NO
		)
		VALUES
		(
		  #{ memberId }
		, #{ optionNo }
		)
	</insert>
	
	<!-- 위시리스트 선택 항목 삭제 -->
	<delete id="deleteItemFromWishList">
		DELETE
		  FROM TBL_WISHLIST
		 WHERE MEMBER_ID = #{ memberId }
		   AND OPTION_NO = #{ optionNo }
	</delete>
</mapper>