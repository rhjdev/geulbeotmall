<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reminder.geulbeotmall.admin.model.dao.AdminMapper">
	<resultMap id="memberResultMap" type="com.reminder.geulbeotmall.member.model.dto.MemberDTO">
		<id property="memberId" column="MEMBER_ID"/>
		<result property="memberPwd" column="MEMBER_PWD"/>
		<result property="name" column="NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="address" column="ADDRESS"/>
		<result property="agreement" column="AGREEMENT"/>
		<result property="accInactiveYn" column="ACC_INACTIVE_YN"/>
		<result property="tempPwdYn" column="TEMP_PWD_YN"/>
		<result property="accumLoginCount" column="ACCUM_LOGIN_COUNT"/>
		<result property="loginFailedCount" column="LOGIN_FAILED_COUNT"/>
		<result property="latestLoginDate" column="LATEST_LOGIN_DATE"/>
		<result property="accCreationDate" column="ACC_CREATION_DATE"/>
		<result property="accChangedDate" column="ACC_CHANGED_DATE"/>
		<result property="accClosingDate" column="ACC_CLOSING_DATE"/>
		<result property="accClosingYn" column="ACC_CLOSING_YN"/>
		<collection property="roleList" resultMap="roleResultMap"/> <!-- 1:N -->
	</resultMap>
	
	<resultMap id="roleResultMap" type="com.reminder.geulbeotmall.member.model.dto.RoleDTO">
		<id property="memberId" column="REF_MEMBER_ID"/>
		<id property="authorityCode" column="REF_AUTHORITY_CODE"/>
		<association property="authority" resultMap="authorityResultMap"/> <!-- 1:1 -->
	</resultMap>
	
	<resultMap id="authorityResultMap" type="com.reminder.geulbeotmall.member.model.dto.AuthorityDTO">
		<id property="authCode" column="AUTHORITY_CODE"/>
		<result property="authName" column="AUTHORITY_NAME"/>
		<result property="authDesc" column="AUTHORITY_DESC"/>
	</resultMap>
	
	<resultMap id="suspResultMap" type="com.reminder.geulbeotmall.admin.model.dto.SuspDTO">
		<id property="suspNo" column="SUSP_NO"/>
		<result property="accSuspCount" column="ACC_SUSP_COUNT"/>
		<result property="accSuspDesc" column="ACC_SUSP_DESC"/>
		<result property="accSuspDate" column="ACC_SUSP_DATE"/>
		<association property="memberId" resultMap="memberResultMap"/>
	</resultMap>
	
	<resultMap id="memberSuspResultMap" type="com.reminder.geulbeotmall.admin.model.dto.MemberSuspDTO">
		<collection property="member" resultMap="memberResultMap"/>
		<collection property="susp" resultMap="suspResultMap"/>
	</resultMap>
	
	<resultMap id="productResultMap" type="com.reminder.geulbeotmall.product.model.dto.ProductDTO">
		<id property="prodNo" column="PROD_NO"/>
		<result property="categoryNo" column="CATEGORY_NO"/>
		<result property="brandNo" column="BRAND_NO"/>
		<result property="prodName" column="PROD_NAME"/>
		<result property="prodDesc" column="PROD_DESC"/>
		<result property="productTag" column="PRODUCT_TAG"/>
		<result property="discountRate" column="DISCOUNT_RATE"/>
		<result property="prodPrice" column="PROD_PRICE"/>
		<result property="prodOrigin" column="PROD_ORIGIN"/>
		<result property="prodDetailContent" column="PROD_DETAIL_CONTENT"/>
		<result property="prodDetailViewCount" column="PROD_DETAIL_VIEW_COUNT"/>
		<result property="prodEnrollDate" column="PROD_ENROLL_DATE"/>
		<result property="prodChangeDate" column="PROD_CHANGE_DATE"/>
		<result property="prodAvailYn" column="PROD_AVAIL_YN"/>
		<association property="category" resultMap="categoryResultMap"/> <!-- 1:1 -->
		<association property="brand" resultMap="brandResultMap"/> <!-- 1:1 -->
		<association property="attachmentList" resultMap="thumbnailResultMap"/> <!-- 1:1 -->
		<collection property="option" resultMap="optionResultMap"/> <!-- 1:N -->
	</resultMap>
	
	<resultMap id="thumbnailResultMap" type="com.reminder.geulbeotmall.upload.model.dto.AttachmentDTO">
		<id property="attachmentNo" column="ATTACHMENT_NO"/>
		<result property="refProdNo" column="REF_PROD_NO"/>
		<result property="refRevwNo" column="REF_REVW_NO"/>
		<result property="refInqNo" column="REF_INQ_NO"/>
		<result property="origFileName" column="ORIG_FILE_NAME"/>
		<result property="saveFileName" column="SAVE_FILE_NAME"/>
		<result property="savePath" column="SAVE_PATH"/>
		<result property="thumbnailPath" column="THUMBNAIL_PATH"/>
		<result property="fileType" column="FILE_TYPE"/>
		<result property="attachStatusYn" column="ATTACH_STATUS_YN"/>
	</resultMap>
	
	<resultMap id="optionResultMap" type="com.reminder.geulbeotmall.product.model.dto.OptionDTO">
		<id property="optionNo" column="OPTION_NO"/>
		<result property="refProdNo" column="REF_PROD_NO"/>
		<result property="refStockNo" column="REF_STOCK_NO"/>
		<result property="bodyColor" column="OPT_BODY_COLOR"/>
		<result property="inkColor" column="OPT_INK_COLOR"/>
		<result property="pointSize" column="OPT_POINT_SIZE"/>
		<result property="extraCharge" column="OPT_EXTRA_CHARGE"/>
		<association property="stock" resultMap="stockResultMap"/> <!-- 1:1 -->
	</resultMap>
	
	<resultMap id="stockResultMap" type="com.reminder.geulbeotmall.product.model.dto.StockDTO">
		<id property="stockNo" column="STOCK_NO"/>
		<result property="stockAmount" column="STOCK_AMOUNT"/>
		<result property="stockDate" column="STOCK_DATE"/>
	</resultMap>
	
	<resultMap id="categoryResultMap" type="com.reminder.geulbeotmall.product.model.dto.CategoryDTO">
		<id property="categoryNo" column="CATEGORY_NO"/>
		<result property="categoryName" column="CATEGORY_NAME"/>
	</resultMap>
	
	<resultMap id="brandResultMap" type="com.reminder.geulbeotmall.product.model.dto.BrandDTO">
		<id property="brandNo" column="BRAND_NO"/>
		<result property="brandName" column="BRAND_NAME"/>
	</resultMap>
	
	<!-- 주문배송정보 조회용 -->
	<resultMap id="orderDetailResultMap" type="com.reminder.geulbeotmall.cart.model.dto.OrderDetailDTO">
		<id property="orderNo" column="ORDER_NO"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="orderDate" column="ORDER_DATE"/>
		<result property="rcvrName" column="RCVR_NAME"/>
		<result property="rcvrPhone" column="RCVR_PHONE"/>
		<result property="rcvrAddress" column="RCVR_ADDRESS"/>
		<result property="dlvrReqMessage" column="DLVR_REQ_MESSAGE"/>
		<result property="dlvrStatus" column="DLVR_STATUS"/>
		<association property="order" resultMap="orderResultMap"/> <!-- 1:1 -->
		<association property="payment" resultMap="paymentResultMap"/> <!-- 1:1 -->
		<association property="delivery" resultMap="deliveryResultMap"/> <!-- 1:1 -->
		<association property="point" resultMap="pointResultMap"/> <!-- 1:1 -->
		<association property="product" resultMap="productResultMap"/> <!-- 1:1 -->
		<association property="brand" resultMap="brandResultMap"/> <!-- 1:1 -->
		<association property="attachmentList" resultMap="thumbnailResultMap"/> <!-- 1:1 -->
		<association property="member" resultMap="memberResultMap"/> <!-- 1:1 -->
		<collection property="option" resultMap="optionResultMap"/> <!-- 1:N -->
	</resultMap>
	
	<!-- 주문상품정보 조회용 -->
	<resultMap id="orderResultMap" type="com.reminder.geulbeotmall.cart.model.dto.OrderDTO">
		<result property="orderNo" column="ORDER_NO"/>
		<result property="optionNo" column="OPTION_NO"/>
		<result property="orderQuantity" column="ORDER_QUANTITY"/>
		<result property="orderAmount" column="ORDER_AMOUNT"/>
	</resultMap>
	
	<!-- 주문결제정보 조회용 -->
	<resultMap id="paymentResultMap" type="com.reminder.geulbeotmall.cart.model.dto.PaymentDTO">
		<id property="paymentNo" column="PAYMENT_NO"/>
		<result property="orderNo" column="ORDER_NO"/>
		<result property="paymentMethod" column="PAYMENT_METHOD"/>
		<result property="paymentAmount" column="PAYMENT_AMOUNT"/>
		<result property="paymentDateTime" column="PAYMENT_DATETIME"/>
	</resultMap>
	
	<!-- 배송정보 조회용 -->
	<resultMap id="deliveryResultMap" type="com.reminder.geulbeotmall.cart.model.dto.DeliveryDTO">
		<result property="orderNo" column="ORDER_NO"/>
		<result property="deliveryFee" column="DELIVERY_FEE"/>
		<result property="deliveryCompany" column="DELIVERY_COMPANY"/>
		<result property="dispatchDate" column="DISPATCH_DATE"/>
		<result property="deliveryDate" column="DELIVERY_DATE"/>
	</resultMap>
	
	<!-- 적립금 조회용 -->
	<resultMap id="pointResultMap" type="com.reminder.geulbeotmall.cart.model.dto.PointDTO">
		<id property="pointNo" column="POINT_NO"/>
		<result property="paymentNo" column="PAYMENT_NO"/>
		<result property="bonusReason" column="BONUS_REASON"/>
		<result property="pointAmount" column="POINT_AMOUNT"/>
		<result property="pointDateTime" column="POINT_DATETIME"/>
		<result property="pointStatus" column="POINT_STATUS"/>
	</resultMap>
	
	<!-- 리뷰 조회용 -->
	<resultMap id="reviewResultMap" type="com.reminder.geulbeotmall.review.model.dto.ReviewDTO">
		<id property="reviewNo" column="REVIEW_NO"/>
		<result property="optionNo" column="OPTION_NO"/>
		<result property="orderNo" column="ORDER_NO"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="revwTitle" column="REVW_TITLE"/>
		<result property="revwContent" column="REVW_CONTENT"/>
		<result property="revwRegDate" column="REVW_REG_DATE"/>
		<result property="revwHits" column="REVW_HITS"/>
		<result property="revwRatings" column="REVW_RATINGS"/>
		<association property="option" resultMap="optionResultMap"/>
		<association property="product" resultMap="productResultMap"/>
		<collection property="attachmentList" resultMap="thumbnailResultMap"/>
	</resultMap>
	
	<!-- 휴지통 삭제글 조회용 -->
	<resultMap id="trashResultMap" type="com.reminder.geulbeotmall.admin.model.dto.TrashDTO">
		<id property="trashNo" column="TRASH_NO"/>
		<result property="refRevwNo" column="REF_REVW_NO"/>
		<result property="trashTitle" column="TRASH_TITLE"/>
		<result property="trashWriter" column="TRASH_WRITER"/>
		<result property="trashDeleteBy" column="TRASH_DELETEBY"/>
		<result property="trashDateMoved" column="TRASH_DATE_MOVED"/>
		<result property="trashDateUntil" column="TRASH_DATE_UNTIL"/>
	</resultMap>
	
	<sql id="dateRangeForMemberData">
		<trim prefix="WHERE">
			<if test="range != null and range eq 'oneWeek'">ACC_CREATION_DATE BETWEEN TO_DATE(SYSDATE-7) AND TO_DATE(SYSDATE+1)</if>
			<if test="range != null and range eq 'oneMonth'">ACC_CREATION_DATE BETWEEN TO_DATE(ADD_MONTHS(SYSDATE, -1)) AND TO_DATE(SYSDATE+1)</if>
			<if test="range != null and range eq 'threeMonths'">ACC_CREATION_DATE BETWEEN TO_DATE(ADD_MONTHS(SYSDATE, -3)) AND TO_DATE(SYSDATE+1)</if>
			<if test="range != null and range eq 'sixMonths'">ACC_CREATION_DATE BETWEEN TO_DATE(ADD_MONTHS(SYSDATE, -6)) AND TO_DATE(SYSDATE+1)</if>
			<if test="range eq 'other' and start != '' and end != ''">ACC_CREATION_DATE BETWEEN TO_DATE(#{ start }, 'yyyymmdd') AND TO_DATE(#{ end }, 'yyyymmdd')+1</if>
		</trim>
	</sql>
	<sql id="dateRangeForSalesData">
		<trim prefix="WHERE">
			<if test="range != null and range eq 'oneWeek'">PAYMENT_DATETIME BETWEEN TO_CHAR(TO_DATE(SYSDATE-7), 'yyyy.mm.dd') AND TO_CHAR(TO_DATE(SYSDATE+1), 'yyyy.mm.dd')</if>
			<if test="range != null and range eq 'oneMonth'">PAYMENT_DATETIME BETWEEN TO_CHAR(TO_DATE(ADD_MONTHS(SYSDATE, -1)), 'yyyy.mm') AND TO_CHAR(TO_DATE(SYSDATE+1), 'yyyy.mm')</if>
			<if test="range != null and range eq 'threeMonths'">PAYMENT_DATETIME BETWEEN TO_CHAR(TO_DATE(ADD_MONTHS(SYSDATE, -3)), 'yyyy.mm') AND TO_CHAR(TO_DATE(SYSDATE+1), 'yyyy.mm')</if>
			<if test="range != null and range eq 'sixMonths'">PAYMENT_DATETIME BETWEEN TO_CHAR(TO_DATE(ADD_MONTHS(SYSDATE, -6)), 'yyyy.mm') AND TO_CHAR(TO_DATE(SYSDATE+1), 'yyyy.mm')</if>
			<if test="range eq 'other' and start != '' and end != ''">PAYMENT_DATETIME BETWEEN TO_CHAR(TO_DATE(#{ start }, 'yyyymmdd'), 'yyyy.mm') AND TO_CHAR(TO_DATE(#{ end }, 'yyyymmdd')+1, 'yyyy.mm')</if>
		</trim>
	</sql>
	<!-- 통계 조회(회원수) *최근 1주/1개월/3개월/6개월/기타 기간별* -->
	<select id="getMemberDataByDate" resultType="HashMap">
		SELECT
			   COUNT(*) VALUE
		<if test="range eq 'oneWeek' or range eq 'other'">, TO_CHAR(ACC_CREATION_DATE, 'yyyy.mm.dd') LABEL</if>
		<if test="range neq 'other' and range neq 'oneWeek'">, TO_CHAR(ACC_CREATION_DATE, 'yyyy.mm') LABEL</if>
		  FROM TBL_MEMBER
		<include refid="dateRangeForMemberData"/>
		<if test="range eq 'oneWeek' or range eq 'other'">GROUP BY TO_CHAR(ACC_CREATION_DATE, 'yyyy.mm.dd')</if>
		<if test="range neq 'other' and range neq 'oneWeek'">GROUP BY TO_CHAR(ACC_CREATION_DATE, 'yyyy.mm')</if>
		<if test="range eq 'oneWeek' or range eq 'other'">ORDER BY TO_CHAR(ACC_CREATION_DATE, 'yyyy.mm.dd')</if>
		<if test="range neq 'other' and range neq 'oneWeek'">ORDER BY TO_CHAR(ACC_CREATION_DATE, 'yyyy.mm')</if>
	</select>
	<!-- 통계 조회(매출액) *최근 1주/1개월/3개월/6개월/기타 기간별* -->
	<select id="getSalesDataByDate" resultType="HashMap">
		SELECT
			   SUM(PAYMENT_AMOUNT) VALUE
		<if test="range eq 'oneWeek' or range eq 'other'">, TO_CHAR(TO_DATE(PAYMENT_DATETIME, 'yyyy.mm.dd PM HH:MI:SS'), 'yyyy.mm.dd') LABEL</if>
		<if test="range neq 'other' and range neq 'oneWeek'">, TO_CHAR(TO_DATE(PAYMENT_DATETIME, 'yyyy.mm.dd PM HH:MI:SS'), 'yyyy.mm') LABEL</if>
		  FROM TBL_PAYMENT
		<include refid="dateRangeForSalesData"/>
		<if test="range eq 'oneWeek' or range eq 'other'">GROUP BY TO_CHAR(TO_DATE(PAYMENT_DATETIME, 'yyyy.mm.dd PM HH:MI:SS'), 'yyyy.mm.dd')</if>
		<if test="range neq 'other' and range neq 'oneWeek'">GROUP BY TO_CHAR(TO_DATE(PAYMENT_DATETIME, 'yyyy.mm.dd PM HH:MI:SS'), 'yyyy.mm')</if>
		<if test="range eq 'oneWeek' or range eq 'other'">ORDER BY TO_CHAR(TO_DATE(PAYMENT_DATETIME, 'yyyy.mm.dd PM HH:MI:SS'), 'yyyy.mm.dd')</if>
		<if test="range neq 'other' and range neq 'oneWeek'">ORDER BY TO_CHAR(TO_DATE(PAYMENT_DATETIME, 'yyyy.mm.dd PM HH:MI:SS'), 'yyyy.mm')</if>
	</select>
	<!-- 통계 조회(누적 판매량 Top 8) -->
	<select id="getTopSalesProduct" resultType="HashMap">
		SELECT *
		  FROM (
				SELECT
					   A.PROD_NO NO
					 , A.PROD_NAME NAME
					 , SUM(C.ORDER_QUANTITY) SALES
				  FROM TBL_PRODUCT A
				  LEFT JOIN TBL_OPTION B ON(A.PROD_NO = B.REF_PROD_NO)
				  LEFT JOIN TBL_ORDER C ON(B.OPTION_NO = C.OPTION_NO)
				  LEFT JOIN TBL_OPTION D ON(C.OPTION_NO = D.OPTION_NO)
				 GROUP BY A.PROD_NO, A.PROD_NAME
				 ORDER BY SUM(C.ORDER_QUANTITY) DESC
		  	   )
		<![CDATA[
		 WHERE ROWNUM <= 8
		]]>
	</select>
	
	<!-- 회원관리 -->
	<select id="getMemberDetails" resultMap="memberResultMap">
		SELECT
			   A.MEMBER_ID
			 , A.MEMBER_PWD
			 , A.NAME
			 , A.PHONE
			 , A.EMAIL
			 , A.ADDRESS
			 , A.AGREEMENT
			 , A.ACC_INACTIVE_YN
			 , A.TEMP_PWD_YN
			 , A.ACCUM_LOGIN_COUNT
			 , A.LOGIN_FAILED_COUNT
			 , A.LATEST_LOGIN_DATE
			 , A.ACC_CREATION_DATE
			 , A.ACC_CHANGED_DATE
			 , A.ACC_CLOSING_DATE
			 , A.ACC_CLOSING_YN
			 , C.AUTHORITY_DESC
		  FROM TBL_MEMBER A
		  LEFT JOIN TBL_ROLE B ON(A.MEMBER_ID = B.MEMBER_ID)
		  LEFT JOIN TBL_AUTHORITY C ON(B.AUTHORITY_CODE = C.AUTHORITY_CODE)
		 WHERE A.MEMBER_ID = #{ memberId }
		 GROUP BY A.MEMBER_ID, A.MEMBER_PWD, A.NAME, A.PHONE, A.EMAIL, A.ADDRESS, A.AGREEMENT, A.ACC_INACTIVE_YN, A.TEMP_PWD_YN, A.ACCUM_LOGIN_COUNT, A.LOGIN_FAILED_COUNT, A.LATEST_LOGIN_DATE, A.ACC_CREATION_DATE, A.ACC_CHANGED_DATE, A.ACC_CLOSING_DATE, A.ACC_CLOSING_YN, C.AUTHORITY_DESC
	</select>
	
	<select id="getSuspDetails" resultMap="suspResultMap">
		SELECT
			   SUSP_NO
			 , MEMBER_ID
			 , ACC_SUSP_COUNT
			 , ACC_SUSP_DESC
			 , ACC_SUSP_DATE
		  FROM (SELECT * FROM TBL_SUSP ORDER BY ACC_SUSP_DATE)
		 WHERE MEMBER_ID = #{ memberId }
	</select>
	
	<select id="getSuspCount" resultType="_int">
		SELECT
			   NVL(MAX(ACC_SUSP_COUNT), 0)
		  FROM TBL_SUSP
		 WHERE MEMBER_ID = #{ memberId }
	</select>
	
	<sql id="memberSearch">
		 <trim prefix="AND">
		 	   <if test="keyword != null and condition eq 'id'">A.MEMBER_ID LIKE '%' || #{ keyword } || '%'</if>
		 	   <if test="keyword != null and condition eq 'name'">A.NAME LIKE '%' || #{ keyword } || '%'</if>
			   <if test="keyword != null and condition eq 'phone'">A.PHONE LIKE '%' || #{ keyword } || '%'</if>
			   <if test="keyword != null and condition eq 'email'">A.EMAIL LIKE '%' || #{ keyword } || '%'</if>
			   <if test="keyword != null and condition eq 'address'">A.ADDRESS LIKE '%' || #{ keyword } || '%'</if>
		 </trim>
	</sql>
	
	<select id="getTotalNumber" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultType="_int">
		SELECT
			   COUNT(DISTINCT A.MEMBER_ID)
		  FROM TBL_MEMBER A
		 WHERE A.ACC_CLOSING_YN = 'N'
		<include refid="memberSearch"></include>
	</select>
	<select id="getRegularNumber" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultType="_int">
		SELECT
			   COUNT(DISTINCT A.MEMBER_ID)
		  FROM TBL_MEMBER A
		 WHERE A.ACC_CLOSING_YN = 'N'
		   AND A.MEMBER_ID NOT IN (SELECT
		   						  		  B.MEMBER_ID
		   					 	     FROM TBL_MEMBER B
		   					 	     LEFT JOIN TBL_ROLE C ON(B.MEMBER_ID = C.MEMBER_ID)
		  					 	     LEFT JOIN TBL_AUTHORITY D ON(C.AUTHORITY_CODE = D.AUTHORITY_CODE)
		  						    WHERE C.AUTHORITY_CODE = 2)
		<include refid="memberSearch"></include>
	</select>
	<select id="getAdminNumber" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultType="_int">
		SELECT
			   COUNT(DISTINCT A.MEMBER_ID)
		  FROM TBL_MEMBER A
		  LEFT JOIN TBL_ROLE B ON(A.MEMBER_ID = B.MEMBER_ID)
		  LEFT JOIN TBL_AUTHORITY C ON(B.AUTHORITY_CODE = C.AUTHORITY_CODE)
		 WHERE A.ACC_CLOSING_YN = 'N'
		   AND B.AUTHORITY_CODE = 2
		<include refid="memberSearch"></include>
	</select>
	<select id="getClosedNumber" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultType="_int">
		SELECT
			   COUNT(DISTINCT A.MEMBER_ID)
		  FROM TBL_MEMBER A
		 WHERE A.ACC_CLOSING_YN = 'Y'
		<include refid="memberSearch"></include>
	</select>
	
	<select id="getMemberList" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultMap="memberResultMap">
		SELECT
			   C.RK
			 , C.*
		  FROM (
				SELECT B.RANK RK 
					 , B.*
				  FROM (
				  		SELECT 
				  			   DENSE_RANK() OVER (ORDER BY A.ACC_CREATION_DATE, A.MEMBER_ID) RANK
				  			 , A.MEMBER_ID
					 		 , A.NAME
					 		 , REGEXP_REPLACE(A.PHONE, '(.{3})(.+)(.{4})', '\1-\2-\3') PHONE
					 		 , A.EMAIL
					 		 , REGEXP_REPLACE(A.ADDRESS, '-|\$', ' ') ADDRESS
					 		 , A.LATEST_LOGIN_DATE
					 		 , A.ACC_CREATION_DATE 
					 	 FROM TBL_MEMBER A
				 		WHERE A.ACC_CLOSING_YN = 'N'
						<include refid="memberSearch"></include>
				 		) B
				<![CDATA[
				 WHERE B.RANK <= #{ currentPageNo } * #{ recordsPerPage }
				) C
		WHERE C.RK > (#{ currentPageNo } - 1) * #{ recordsPerPage }
		]]>
	</select>
	<select id="getMemberOnly" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultMap="memberResultMap">
		SELECT
			  C.*
		  FROM (
				SELECT
					   B.RANK RK
					 , B.*
				  FROM (
						SELECT
							   DENSE_RANK() OVER(ORDER BY A.ACC_CREATION_DATE, A.MEMBER_ID) RANK
							 , A.MEMBER_ID
							 , A.NAME
							 , REGEXP_REPLACE(A.PHONE, '(.{3})(.+)(.{4})', '\1-\2-\3') PHONE
							 , A.EMAIL
							 , REGEXP_REPLACE(A.ADDRESS, '-|\$', ' ') ADDRESS
							 , A.LATEST_LOGIN_DATE
							 , A.ACC_CREATION_DATE
						  FROM TBL_MEMBER A
						 WHERE A.ACC_CLOSING_YN = 'N'
						   AND A.MEMBER_ID NOT IN (SELECT
						   						  		  B.MEMBER_ID
						   					 	     FROM TBL_MEMBER B
						   					 	     LEFT JOIN TBL_ROLE C ON(B.MEMBER_ID = C.MEMBER_ID)
						  					 	     LEFT JOIN TBL_AUTHORITY D ON(C.AUTHORITY_CODE = D.AUTHORITY_CODE)
						  						    WHERE C.AUTHORITY_CODE = 2)
						<include refid="memberSearch"></include>
				  		) B
				<![CDATA[
				 WHERE B.RANK <= #{ currentPageNo } * #{ recordsPerPage }
				]]>
			<![CDATA[
			) C
		WHERE C.RK > (#{ currentPageNo } - 1) * #{ recordsPerPage }
		]]>
	</select>
	<select id="getAdminOnly" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultMap="memberResultMap">
		SELECT
			  C.*
		  FROM (
				SELECT
					   B.RANK RK
					 , B.*
				  FROM (
						SELECT
							   DENSE_RANK() OVER(ORDER BY A.ACC_CREATION_DATE, A.MEMBER_ID) RANK
							 , A.MEMBER_ID
							 , A.NAME
							 , REGEXP_REPLACE(A.PHONE, '(.{3})(.+)(.{4})', '\1-\2-\3') PHONE
							 , A.EMAIL
							 , REGEXP_REPLACE(A.ADDRESS, '-|\$', ' ') ADDRESS
							 , A.LATEST_LOGIN_DATE
							 , A.ACC_CREATION_DATE
						  FROM TBL_MEMBER A
						  LEFT JOIN TBL_ROLE B ON(A.MEMBER_ID = B.MEMBER_ID)
		  				  LEFT JOIN TBL_AUTHORITY C ON(B.AUTHORITY_CODE = C.AUTHORITY_CODE)
						 WHERE A.ACC_CLOSING_YN = 'N'
						   AND B.AUTHORITY_CODE = 2
						<include refid="memberSearch"></include>
				  		) B
				<![CDATA[
				 WHERE B.RANK <= #{ currentPageNo } * #{ recordsPerPage }
				]]>
			   ) C
		<![CDATA[
		WHERE C.RK > (#{ currentPageNo } - 1) * #{ recordsPerPage }
		]]>
	</select>
	<select id="getClosedOnly" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultMap="memberSuspResultMap">
		SELECT
			   D.*
		  FROM(
				SELECT
					   C.RANK RK
					 , C.*
				  FROM(
					SELECT
						   DENSE_RANK() OVER(ORDER BY ACC_CLOSING_DATE DESC) RANK
						 , A.MEMBER_ID
						 , B.ACC_SUSP_DESC
						 , A.ACC_CLOSING_DATE
					  FROM TBL_MEMBER A
					  LEFT JOIN TBL_SUSP B ON(A.MEMBER_ID = B.MEMBER_ID)
					 WHERE A.ACC_CLOSING_YN = 'Y'
					<include refid="memberSearch"></include>
					  ) C
			    <![CDATA[
				 WHERE C.RANK <= #{ currentPageNo } * #{ recordsPerPage }
				]]>
		  		) D
		<![CDATA[
		 WHERE D.RK > (#{ currentPageNo } - 1) * #{ recordsPerPage }
		]]>
	</select>
	
	<select id="searchAuthById" resultType="_int">
		SELECT
			   COUNT(MEMBER_ID)
		  FROM TBL_ROLE
		 WHERE MEMBER_ID = #{ memberId }
	</select>
	
	<delete id="deleteAuthAsAdmin">
		DELETE
		  FROM TBL_ROLE
		 WHERE MEMBER_ID = #{ memberId }
		   AND AUTHORITY_CODE = 2
	</delete>
	
	<insert id="insertAuthAsAdmin">
		INSERT
		  INTO TBL_ROLE
		(
		  MEMBER_ID
		, AUTHORITY_CODE
		)
		VALUES
		(
		  #{ memberId }
		, 2
		)
	</insert>
	
	<update id="updateAccSuspension">
		UPDATE
			   TBL_MEMBER
		   SET ACC_CLOSING_YN = 'Y'
		     , ACC_CLOSING_DATE = SYSDATE
		 WHERE MEMBER_ID = #{ memberId }
	</update>
	
	<insert id="insertAccSuspension">
		<selectKey resultType="_int" keyProperty="accSuspCount" order="BEFORE">
			SELECT
				   NVL(MAX(ACC_SUSP_COUNT), 0) + 1
			  FROM TBL_SUSP
			 WHERE MEMBER_ID = #{ memberId }
		</selectKey>
		INSERT
		  INTO TBL_SUSP
		(
		  SUSP_NO
		, MEMBER_ID
		, ACC_SUSP_DESC
		, ACC_SUSP_COUNT
		, ACC_SUSP_DATE
		)
		VALUES
		(
		  SEQ_SUSP_NO.NEXTVAL
		, #{ memberId }
		, #{ accSuspDesc }
		, #{ accSuspCount }
		, SYSDATE
		)
	</insert>
	
	<update id="updateAccActivation">
		UPDATE
			   TBL_MEMBER
		   SET ACC_CLOSING_YN = 'N'
		     , ACC_CLOSING_DATE = NULL
		 WHERE MEMBER_ID = #{ memberId }
	</update>
	
	<!-- 게시글관리 -->
	<select id="getTotalReviewPostList" resultMap="reviewResultMap">
		SELECT
			   A.REVIEW_NO
			 , A.OPTION_NO
			 , A.ORDER_NO
			 , A.MEMBER_ID
			 , A.REVW_TITLE
			 , A.REVW_CONTENT
			 , A.REVW_REG_DATE
			 , A.REVW_HITS
			 , A.REVW_RATINGS
			 , B.THUMBNAIL_PATH
			 , C.REF_PROD_NO
			 , C.OPT_BODY_COLOR
			 , C.OPT_INK_COLOR
			 , C.OPT_POINT_SIZE
			 , C.OPT_EXTRA_CHARGE
			 , D.PROD_NAME
		  FROM TBL_REVIEW A
		  LEFT JOIN TBL_ATTACHMENT B ON(A.REVIEW_NO = B.REF_REVW_NO)
		  LEFT JOIN TBL_OPTION C ON(A.OPTION_NO = C.OPTION_NO)
		  LEFT JOIN TBL_PRODUCT D ON(C.REF_PROD_NO = D.PROD_NO)
		 WHERE A.REVIEW_NO NOT IN (SELECT T.REF_REVW_NO FROM TBL_TRASH T)
		  <trim prefix="AND">
			<if test="keyword != null and condition eq 'revwTitle'">A.REVW_TITLE LIKE '%' || #{ keyword } || '%'</if>
			<if test="keyword != null and condition eq 'revwContent'">A.REVW_CONTENT LIKE '%' || #{ keyword } || '%'</if>
			<if test="keyword != null and condition eq 'memberId'">A.MEMBER_ID LIKE '%' || #{ keyword } || '%'</if>
		  </trim>
	</select>
	
	<select id="getPostsInTrash" resultMap="trashResultMap">
		SELECT
			   T.TRASH_NO
			 , T.REF_REVW_NO
			 , T.TRASH_TITLE
			 , T.TRASH_WRITER
			 , T.TRASH_DELETEBY
			 , T.TRASH_DATE_MOVED
			 , T.TRASH_DATE_UNTIL
		  FROM TBL_TRASH T
		  LEFT JOIN TBL_REVIEW A ON(T.REF_REVW_NO = A.REVIEW_NO)
		  LEFT JOIN TBL_OPTION B ON(A.OPTION_NO = B.OPTION_NO)
		  LEFT JOIN TBL_PRODUCT C ON(B.REF_PROD_NO = C.PROD_NO)
		 WHERE A.REVIEW_NO IN (SELECT T.REF_REVW_NO FROM TBL_TRASH T)
		  <trim prefix="AND">
			<if test="keyword != null and condition eq 'revwTitle'">A.REVW_TITLE LIKE '%' || #{ keyword } || '%'</if>
			<if test="keyword != null and condition eq 'revwContent'">A.REVW_CONTENT LIKE '%' || #{ keyword } || '%'</if>
			<if test="keyword != null and condition eq 'memberId'">A.MEMBER_ID LIKE '%' || #{ keyword } || '%'</if>
		  </trim>
	</select>
	
	<!-- 삭제글 복구 -->
	<delete id="restoreAPostFromTrash">
		DELETE
		  FROM TBL_TRASH
		 WHERE TRASH_NO = #{ trashNo }
	</delete>
	
	<!-- 게시글삭제단계A. 휴지통 삭제글로 지정 -->
	<insert id="moveAPostToTrash">
		INSERT
		  INTO TBL_TRASH
		(
		  TRASH_NO
		, REF_REVW_NO
		, TRASH_TITLE
		, TRASH_WRITER
		, TRASH_DELETEBY
		, TRASH_DATE_MOVED
		, TRASH_DATE_UNTIL
		)
		VALUES
		(
		  SEQ_TRASH_NO.NEXTVAL
		, #{ refRevwNo }
		, #{ trashTitle }
		, #{ trashWriter }
		, #{ trashDeleteBy }
		, DEFAULT
		, SYSDATE+100
		)
	</insert>
	
	<!-- 게시글삭제단계B. 복구기한 100일 후 영구 삭제 -->
	<select id="getTrashItemToDelete" resultType="_int">
	<![CDATA[
		SELECT
			   REF_REVW_NO
		  FROM TBL_TRASH
		 WHERE TRASH_DATE_UNTIL < SYSDATE
	]]>
	</select>
	
	<delete id="permanentlyDeleteFromTrash">
	<![CDATA[
		DELETE
		  FROM TBL_TRASH
		 WHERE TRASH_DATE_UNTIL < SYSDATE
		   AND REF_REVW_NO = #{ reviewNo }
	]]>
	</delete>
	
	<delete id="permanentlyDeleteReviewPost">
	<![CDATA[
		DELETE
		  FROM TBL_REVIEW
		 WHERE REVIEW_NO = #{ reviewNo }
	]]>
	</delete>
	
	<!-- 주문/배송관리 -->
	<sql id="dashboardOrderSearch">
		<trim prefix="WHERE">
			<if test="keyword != null and condition eq 'memberId'">A.MEMBER_ID LIKE '%' || #{ keyword } || '%'</if>
			<if test="keyword != null and condition eq 'paymentMethod'">C.PAYMENT_METHOD LIKE '%' || #{ keyword } || '%'</if>
		</trim>
	</sql>
	
	<select id="getTotalOrderList" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultMap="orderDetailResultMap">
		SELECT
			   A.ORDER_NO
			 , A.MEMBER_ID
			 , A.ORDER_DATE
			 , A.RCVR_NAME
			 , A.RCVR_PHONE
			 , A.RCVR_ADDRESS
			 , A.DLVR_REQ_MESSAGE
			 , A.DLVR_STATUS
			 , B.OPTION_NO
			 , B.ORDER_QUANTITY
			 , B.ORDER_AMOUNT
			 , C.PAYMENT_NO
			 , C.PAYMENT_METHOD
			 , C.PAYMENT_AMOUNT
			 , C.PAYMENT_DATETIME
			 , L.DELIVERY_FEE
			 , L.DELIVERY_COMPANY
			 , L.DISPATCH_DATE
			 , L.DELIVERY_DATE
			 , N.POINT_AMOUNT
			 , O.OPT_BODY_COLOR
			 , O.OPT_INK_COLOR
			 , O.OPT_POINT_SIZE
			 , O.OPT_EXTRA_CHARGE
			 , P.PROD_NO
			 , P.PROD_NAME
			 , D.BRAND_NAME
			 , T.THUMBNAIL_PATH
		  FROM TBL_ORDER_DETAIL A
		  LEFT JOIN TBL_ORDER B ON(A.ORDER_NO = B.ORDER_NO)
		  LEFT JOIN TBL_PAYMENT C ON(B.ORDER_NO = C.ORDER_NO)
		  LEFT JOIN TBL_DELIVERY L ON(C.ORDER_NO = L.ORDER_NO)
		  LEFT JOIN TBL_POINT N ON(C.PAYMENT_NO = N.PAYMENT_NO)
		  LEFT JOIN TBL_OPTION O ON(B.OPTION_NO = O.OPTION_NO)
		  LEFT JOIN TBL_PRODUCT P ON(O.REF_PROD_NO = P.PROD_NO)
		  LEFT JOIN TBL_BRAND D ON(P.BRAND_NO = D.BRAND_NO)
		  LEFT JOIN TBL_ATTACHMENT T ON(P.PROD_NO = T.REF_PROD_NO)
		<include refid="dashboardOrderSearch"></include>
	</select>
	
	<select id="getPreparingOnly" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultMap="orderDetailResultMap">
		SELECT
			   A.ORDER_NO
			 , A.MEMBER_ID
			 , A.ORDER_DATE
			 , A.RCVR_NAME
			 , A.RCVR_PHONE
			 , A.RCVR_ADDRESS
			 , A.DLVR_REQ_MESSAGE
			 , A.DLVR_STATUS
			 , B.OPTION_NO
			 , B.ORDER_QUANTITY
			 , B.ORDER_AMOUNT
			 , C.PAYMENT_NO
			 , C.PAYMENT_METHOD
			 , C.PAYMENT_AMOUNT
			 , C.PAYMENT_DATETIME
			 , L.DELIVERY_FEE
			 , L.DELIVERY_COMPANY
			 , L.DISPATCH_DATE
			 , L.DELIVERY_DATE
			 , N.POINT_AMOUNT
			 , O.OPT_BODY_COLOR
			 , O.OPT_INK_COLOR
			 , O.OPT_POINT_SIZE
			 , O.OPT_EXTRA_CHARGE
			 , P.PROD_NO
			 , P.PROD_NAME
			 , D.BRAND_NAME
			 , T.THUMBNAIL_PATH
		  FROM TBL_ORDER_DETAIL A
		  LEFT JOIN TBL_ORDER B ON(A.ORDER_NO = B.ORDER_NO)
		  LEFT JOIN TBL_PAYMENT C ON(B.ORDER_NO = C.ORDER_NO)
		  LEFT JOIN TBL_DELIVERY L ON(C.ORDER_NO = L.ORDER_NO)
		  LEFT JOIN TBL_POINT N ON(C.PAYMENT_NO = N.PAYMENT_NO)
		  LEFT JOIN TBL_OPTION O ON(B.OPTION_NO = O.OPTION_NO)
		  LEFT JOIN TBL_PRODUCT P ON(O.REF_PROD_NO = P.PROD_NO)
		  LEFT JOIN TBL_BRAND D ON(P.BRAND_NO = D.BRAND_NO)
		  LEFT JOIN TBL_ATTACHMENT T ON(P.PROD_NO = T.REF_PROD_NO)
		 WHERE A.DLVR_STATUS = '상품준비중'
		<include refid="dashboardOrderSearch"></include>
	</select>
	
	<select id="getDeliveringOnly" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultMap="orderDetailResultMap">
		SELECT
			   A.ORDER_NO
			 , A.MEMBER_ID
			 , A.ORDER_DATE
			 , A.RCVR_NAME
			 , A.RCVR_PHONE
			 , A.RCVR_ADDRESS
			 , A.DLVR_REQ_MESSAGE
			 , A.DLVR_STATUS
			 , B.OPTION_NO
			 , B.ORDER_QUANTITY
			 , B.ORDER_AMOUNT
			 , C.PAYMENT_NO
			 , C.PAYMENT_METHOD
			 , C.PAYMENT_AMOUNT
			 , C.PAYMENT_DATETIME
			 , L.DELIVERY_FEE
			 , L.DELIVERY_COMPANY
			 , L.DISPATCH_DATE
			 , L.DELIVERY_DATE
			 , N.POINT_AMOUNT
			 , O.OPT_BODY_COLOR
			 , O.OPT_INK_COLOR
			 , O.OPT_POINT_SIZE
			 , O.OPT_EXTRA_CHARGE
			 , P.PROD_NO
			 , P.PROD_NAME
			 , D.BRAND_NAME
			 , T.THUMBNAIL_PATH
		  FROM TBL_ORDER_DETAIL A
		  LEFT JOIN TBL_ORDER B ON(A.ORDER_NO = B.ORDER_NO)
		  LEFT JOIN TBL_PAYMENT C ON(B.ORDER_NO = C.ORDER_NO)
		  LEFT JOIN TBL_DELIVERY L ON(C.ORDER_NO = L.ORDER_NO)
		  LEFT JOIN TBL_POINT N ON(C.PAYMENT_NO = N.PAYMENT_NO)
		  LEFT JOIN TBL_OPTION O ON(B.OPTION_NO = O.OPTION_NO)
		  LEFT JOIN TBL_PRODUCT P ON(O.REF_PROD_NO = P.PROD_NO)
		  LEFT JOIN TBL_BRAND D ON(P.BRAND_NO = D.BRAND_NO)
		  LEFT JOIN TBL_ATTACHMENT T ON(P.PROD_NO = T.REF_PROD_NO)
		 WHERE A.DLVR_STATUS = '배송중'
		<include refid="dashboardOrderSearch"></include>
	</select>
	
	<select id="getCompletedOnly" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultMap="orderDetailResultMap">
		SELECT
			   A.ORDER_NO
			 , A.MEMBER_ID
			 , A.ORDER_DATE
			 , A.RCVR_NAME
			 , A.RCVR_PHONE
			 , A.RCVR_ADDRESS
			 , A.DLVR_REQ_MESSAGE
			 , A.DLVR_STATUS
			 , B.OPTION_NO
			 , B.ORDER_QUANTITY
			 , B.ORDER_AMOUNT
			 , C.PAYMENT_NO
			 , C.PAYMENT_METHOD
			 , C.PAYMENT_AMOUNT
			 , C.PAYMENT_DATETIME
			 , L.DELIVERY_FEE
			 , L.DELIVERY_COMPANY
			 , L.DISPATCH_DATE
			 , L.DELIVERY_DATE
			 , N.POINT_AMOUNT
			 , O.OPT_BODY_COLOR
			 , O.OPT_INK_COLOR
			 , O.OPT_POINT_SIZE
			 , O.OPT_EXTRA_CHARGE
			 , P.PROD_NO
			 , P.PROD_NAME
			 , D.BRAND_NAME
			 , T.THUMBNAIL_PATH
		  FROM TBL_ORDER_DETAIL A
		  LEFT JOIN TBL_ORDER B ON(A.ORDER_NO = B.ORDER_NO)
		  LEFT JOIN TBL_PAYMENT C ON(B.ORDER_NO = C.ORDER_NO)
		  LEFT JOIN TBL_DELIVERY L ON(C.ORDER_NO = L.ORDER_NO)
		  LEFT JOIN TBL_POINT N ON(C.PAYMENT_NO = N.PAYMENT_NO)
		  LEFT JOIN TBL_OPTION O ON(B.OPTION_NO = O.OPTION_NO)
		  LEFT JOIN TBL_PRODUCT P ON(O.REF_PROD_NO = P.PROD_NO)
		  LEFT JOIN TBL_BRAND D ON(P.BRAND_NO = D.BRAND_NO)
		  LEFT JOIN TBL_ATTACHMENT T ON(P.PROD_NO = T.REF_PROD_NO)
		 WHERE A.DLVR_STATUS = '배송완료'
		<include refid="dashboardOrderSearch"></include>
	</select>
	
	<select id="getTotalOrderNumber" parameterType="com.reminder.geulbeotmall.paging.model.dto.Criteria" resultType="_int">
		SELECT
			   COUNT(ORDER_NO)
		  FROM TBL_ORDER_DETAIL
		<include refid="dashboardOrderSearch"></include>
	</select>
	
	<!-- 주문번호별 상세정보조회 -->
	<select id="getOrderDetailsByOrderNo" resultMap="orderDetailResultMap">
		SELECT
			   A.ORDER_NO
			 , A.MEMBER_ID
			 , A.ORDER_DATE
			 , A.RCVR_NAME
			 , A.RCVR_PHONE
			 , A.RCVR_ADDRESS
			 , A.DLVR_REQ_MESSAGE
			 , A.DLVR_STATUS
			 , B.OPTION_NO
			 , B.ORDER_QUANTITY
			 , B.ORDER_AMOUNT
			 , C.PAYMENT_NO
			 , C.PAYMENT_METHOD
			 , C.PAYMENT_AMOUNT
			 , C.PAYMENT_DATETIME
			 , L.DELIVERY_FEE
			 , L.DELIVERY_COMPANY
			 , L.DISPATCH_DATE
			 , L.DELIVERY_DATE
			 , N.POINT_AMOUNT
			 , O.OPT_BODY_COLOR
			 , O.OPT_INK_COLOR
			 , O.OPT_POINT_SIZE
			 , O.OPT_EXTRA_CHARGE
			 , P.PROD_NO
			 , P.PROD_NAME
			 , D.BRAND_NAME
			 , T.THUMBNAIL_PATH
			 , M.PHONE
			 , M.EMAIL
		  FROM TBL_ORDER_DETAIL A
		  LEFT JOIN TBL_ORDER B ON(A.ORDER_NO = B.ORDER_NO)
		  LEFT JOIN TBL_PAYMENT C ON(B.ORDER_NO = C.ORDER_NO)
		  LEFT JOIN TBL_DELIVERY L ON(C.ORDER_NO = L.ORDER_NO)
		  LEFT JOIN TBL_POINT N ON(C.PAYMENT_NO = N.PAYMENT_NO)
		  LEFT JOIN TBL_OPTION O ON(B.OPTION_NO = O.OPTION_NO)
		  LEFT JOIN TBL_PRODUCT P ON(O.REF_PROD_NO = P.PROD_NO)
		  LEFT JOIN TBL_BRAND D ON(P.BRAND_NO = D.BRAND_NO)
		  LEFT JOIN TBL_ATTACHMENT T ON(P.PROD_NO = T.REF_PROD_NO)
		  LEFT JOIN TBL_MEMBER M ON(A.MEMBER_ID = M.MEMBER_ID)
		 WHERE A.ORDER_NO = #{ orderNo }
	</select>
	
	<update id="updateDeliveryStatus">
		UPDATE
			   TBL_ORDER_DETAIL
		   SET DLVR_STATUS = #{ dlvrStatus }
		 WHERE ORDER_NO = #{ orderNo }
	</update>
	
	<update id="updateDispatchDate">
		UPDATE
			   TBL_DELIVERY
		   SET DISPATCH_DATE = SYSDATE
		 WHERE ORDER_NO = #{ orderNo }
	</update>
	
	<update id="updateDeliveryDate">
		UPDATE
			   TBL_DELIVERY
		   SET DELIVERY_DATE = SYSDATE
		 WHERE ORDER_NO = #{ orderNo }
	</update>
	
	<!-- 메인 디스플레이용 디자인 이미지 첨부 -->
	<insert id="addDisplayImages">
		INSERT
		  INTO TBL_DESIGNIMAGE
		(
		  DESIGNIMAGE_NO
		, REF_PROD_NO
		, ORIG_IMAGE_NAME
		, SAVE_IMAGE_NAME
		, SAVE_PATH
		, IMAGE_TYPE
		, DISPLAY_STATUS_YN
		)
		VALUES
		(
		  SEQ_DESIGNIMAGE_NO.NEXTVAL
		<if test="refProdNo == null">, NULL</if>
		<if test="refProdNo != null">, #{ refProdNo }</if>
		, #{ origImageName }
		, #{ saveImageName }
		, #{ savePath }
		, #{ imageType }
		, 'Y'
		)
	</insert>
</mapper>